name: Test Release Publish

on: [push]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Get npm cache
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ubuntu-latest-node-22.x-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-node-22.x-npm-
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org/
      - name: Install
        run: npm ci
      - name: Test
        run: npm test -- --ci --bail
      - name: Build
        run: NODE_ENV=production npm run build

  release_publish:
    name: Release to Github and publish to NPM
    runs-on: ubuntu-latest
    needs: test
    if: success() && github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Get npm cache
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ubuntu-latest-node-22.x-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ubuntu-latest-node-22.x-npm-
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org/
      - name: Install
        run: npm ci
      - name: Build
        run: NODE_ENV=production npm run build
      - name: Setup env vars
        id: ownEnvVars
        run: |
          # Set PACKAGE_VERSION
          PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
          echo ::set-output name=PACKAGE_VERSION::$PACKAGE_VERSION
          # Set COMMIT_LOG
          COMMIT_LOG=`git log $(git describe --tags --abbrev=0)..HEAD --format='%s - %an'`
          echo ::set-output name=COMMIT_LOG::$COMMIT_LOG
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.ownEnvVars.outputs.PACKAGE_VERSION }}
          commit: main
          body: ${{ steps.ownEnvVars.outputs.COMMIT_LOG }}
      - name: npm publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: github.event.pull_request.user.login != 'dependabot'
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./coverage # optional
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./demo/dist
